import*as i from"./data.min.js";class s{#t=0;#i=0;#o=0;#g=0;#m=0;#h={primary:0,secondary:0,tertiary:0};#l={primary:0,secondary:0,tertiary:0};static fromScrylink(e){const r=Object.fromEntries(new URL(e).searchParams);for(const t in r)r[t]=parseInt?.(r[t]);const n=i.BREEDS.findIndex(e=>r.breed===e.sid);return new s({breed:n,eye:i.EYES.findIndex(e=>r.eyetype===e.sid),element:i.ELEMENTS.findIndex(e=>r.element===e.sid),age:i.AGES.findIndex(e=>r.age===e.sid),gender:i.GENDERS.findIndex(e=>r.gender===e.sid),colour:{primary:i.COLOURS.findIndex(e=>r.body===e.sid),secondary:i.COLOURS.findIndex(e=>r.wings===e.sid),tertiary:i.COLOURS.findIndex(e=>r.tert===e.sid)},gene:{primary:i.GENES.primary.findIndex(e=>r.bodygene===e.sidForBreed(n)),secondary:i.GENES.secondary.findIndex(e=>r.winggene===e.sidForBreed(n)),tertiary:i.GENES.tertiary.findIndex(e=>r.tertgene===e.sidForBreed(n))}})}static fromProfile(e){const r=/Primary Gene\n(\w+)\n(\w+)(?: \(\w+\))*\nSecondary Gene\n(\w+)\n(\w+)(?: \(\w+\))*\nTertiary Gene\n(\w+)\n(\w+).*(?:Breed\n){2}(\w+)\n(\w+)\nEye Type\n(?:Special )*Eye Type\n(\w+)\n(\w+)/s.exec(e.replace(/\r/g,""));return r[7]="Adult"===r[7]?"Dragon":r[7],new s({breed:i.BREEDS.findIndex(e=>r[8]===e.name),eye:i.EYES.findIndex(e=>r[10]===e.name),element:i.ELEMENTS.findIndex(e=>r[9]===e.name),age:i.AGES.findIndex(e=>r[7]===e.name),colour:{primary:i.COLOURS.findIndex(e=>r[1]===e.name),secondary:i.COLOURS.findIndex(e=>r[3]===e.name),tertiary:i.COLOURS.findIndex(e=>r[5]===e.name)},gene:{primary:i.GENES.primary.findIndex(e=>r[2]===e.name),secondary:i.GENES.secondary.findIndex(e=>r[4]===e.name),tertiary:i.GENES.tertiary.findIndex(e=>r[6]===e.name)}})}constructor(e){e.breed in i.BREEDS&&(this.#t=e.breed),e.eye in i.EYES&&(this.#i=e.eye),e.element in i.ELEMENTS&&(this.#o=e.element),e.gender in i.GENDERS&&(this.#g=e.gender),e.age in i.AGES&&(this.#m=e.age);for(const r in i.GENES)e?.colour?.[r]in i.COLOURS&&(this.#h[r]=e.colour[r]);for(const n in i.GENES)void 0!==i.GENES[n][e?.gene?.[n]]?.sidForBreed(this.#t)?this.#l[n]=e.gene[n]:this.#l[n]=i.GENES[n].findIndex(e=>0===e.sids.M)}get indices(){return{breed:this.#t,eye:this.#i,element:this.#o,gender:this.#g,age:this.#m,colour:{...this.#h},gene:{...this.#l}}}get values(){var e=this.indices;return{breed:i.BREEDS[e.breed],eye:i.EYES[e.eye],element:i.ELEMENTS[e.element],gender:i.GENDERS[e.gender],age:i.AGES[e.age],colour:{primary:i.COLOURS[e.colour.primary],secondary:i.COLOURS[e.colour.secondary],tertiary:i.COLOURS[e.colour.tertiary]},gene:{primary:i.GENES.primary[e.gene.primary],secondary:i.GENES.secondary[e.gene.secondary],tertiary:i.GENES.tertiary[e.gene.tertiary]}}}get scrylink(){var e=this.indices.breed,{breed:r,eye:n,element:t,gender:i,age:s,colour:a,gene:y}=this.values;return"https://www1.flightrising.com/scrying/predict?"+new URLSearchParams({breed:r.sid,gender:i.sid,age:s.sid,bodygene:y.primary.sidForBreed(e),body:a.primary.sid,winggene:y.secondary.sidForBreed(e),wings:a.secondary.sid,tertgene:y.tertiary.sidForBreed(e),tert:a.tertiary.sid,element:t.sid,eyetype:n.sid})}}export{s as DragonTraits};
//# sourceMappingURL=convert.js.map